apply plugin: 'war'
// java编译的时候缺省状态下会因为中文字符而失败
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// 扩展定义
ext {

}

// 依赖
dependencies {
    compile project(':flow-api')

    compile(
            //json
            "com.fasterxml.jackson.core:jackson-databind:$jackson_version",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jackson_version",
            "com.fasterxml.jackson.core:jackson-core:$jackson_version",

            "javax.servlet:javax.servlet-api:3.1.0",

            //Shiro
            "org.apache.shiro:shiro-spring:$shiro_version",
            "org.apache.shiro:shiro-ehcache:$shiro_version",
            "org.apache.shiro:shiro-quartz:$shiro_version",

            //Spring
            "org.springframework:spring-web:$spring_version",
            "org.springframework:spring-webmvc:$spring_version",

            //GENERAL UTILS
            "org.apache.commons:commons-lang3:$commons_lang3_version",
            "org.apache.commons:commons-math3:$commons_lang3_version",
            "commons-io:commons-io:$commons_io_version",
            "commons-collections:commons-collections:3.2.1",
            "commons-beanutils:commons-beanutils:1.9.2",
            "commons-fileupload:commons-fileupload:1.3.1",
            "commons-codec:commons-codec:1.7",

            "com.ecmp:core-web:1.0.3"

    )

    /*testCompile(
            "junit:junit:$junit_version"
    )*/
}

jar {
    manifest {
        attributes("Implementation-Title": "$project.name")
        attributes("Build-Time": new Date().format("yyyy-MM-dd HH:mm:ss"))
    }
}

/////////////////////////////////////上传Maven仓库////////////////////////////////////////
//打包源代码
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

//如果希望gradle install，安装到.m2本地仓库，参考下面的内容
install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "$project.name"
        pom.groupId = "$project.group"
    }
}

//上传到nexus
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: MAVEN_REPO_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
            pom.version = "$project.version"
            pom.artifactId = "$project.name"
            pom.groupId = "$project.group"
        }
    }
    return 'Success'
}

// gradle upload
